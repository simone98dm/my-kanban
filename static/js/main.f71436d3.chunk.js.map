{"version":3,"sources":["Constants.ts","components/Badge/Badge.tsx","components/Card/Card.tsx","components/List/List.tsx","components/Kanban/Kanban.tsx","App.tsx","api/fakeBackend.ts","index.tsx"],"names":["ItemTypes","Badge","props","className","text","Card","card","item","useDrag","type","collect","monitor","opacity","isDragging","dragRef","ref","style","id","title","List","useDrop","accept","drop","onMoveHandler","cards","name","list","map","i","Kanban","data","DndProvider","backend","HTML5Backend","lists","App","useState","kanban","setKanban","error","setError","useEffect","Object","keys","length","localStorage","setItem","JSON","stringify","localKanban","getItem","parse","Promise","resolve","reject","then","result","catch","err","finally","newKanban","k","splice","console","log","push","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f71436d3.chunk.js","sourcesContent":["export const ItemTypes = {\r\n  CARD: \"CARD\",\r\n};\r\n","import React from 'react';\r\nimport './Badge.css';\r\n\r\nconst Badge = (props: BadgeProps) => (\r\n  <div className=\"label label-rounded h6 label-primary Badge\">\r\n    {props.text}\r\n  </div>\r\n);\r\n\r\ninterface BadgeProps {\r\n  text: string;\r\n  color?: string;\r\n}\r\n\r\nexport default Badge;\r\n","import { useDrag } from 'react-dnd'\r\nimport { ItemTypes } from '../../Constants';\r\nimport { ICard } from '../../models/Card';\r\nimport Badge from '../Badge/Badge';\r\nimport './Card.css';\r\n\r\nconst Card = (props: CardProps) => {\r\n  const card = props.item;\r\n\r\n  const [{ opacity }, dragRef] = useDrag(() => ({\r\n    type: ItemTypes.CARD,\r\n    item: { card },\r\n    collect: (monitor) => ({\r\n      opacity: monitor.isDragging() ? 0.5 : 1\r\n    }),\r\n  }), []);\r\n\r\n  return (\r\n    <div className=\"card mt-2\" ref={dragRef} style={{ opacity }}>\r\n      <div className=\"card-header h4\">\r\n        <Badge text={`${props.item.id}`} /> <br/> \r\n        {props.item.title}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface CardProps {\r\n  item: ICard;\r\n}\r\n\r\nexport default Card;\r\n","import { useDrop } from 'react-dnd';\r\nimport { ItemTypes } from '../../Constants';\r\nimport { IList } from '../../models/List';\r\nimport Card from '../Card/Card';\r\nimport './List.css';\r\n\r\nconst List = (props: ListProps) => {\r\n\r\n  const [, drop] = useDrop(() => ({\r\n    accept: ItemTypes.CARD,\r\n    drop: (item, monitor) => {\r\n      props.onMoveHandler(item, props.cards.id);\r\n    }\r\n  }));\r\n\r\n  return (\r\n    <div className=\"card List full-height\" ref={drop}>\r\n      <div className=\"card-header\">\r\n        <div className=\"card-title label label-primary\">{props.cards.name}</div>\r\n      </div>\r\n      <div className=\"card-body\">\r\n        <div className=\"columns\">\r\n          {props.cards.list\r\n            && props.cards.list.map((card, i) => (\r\n              <div className=\"col-12\" key={`card${i}`}>\r\n                <Card item={card} />\r\n              </div>)\r\n            )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\ninterface ListProps {\r\n  cards: IList;\r\n  onMoveHandler: any;\r\n}\r\n\r\nexport default List;\r\n","import { DndProvider } from 'react-dnd';\r\nimport { HTML5Backend } from 'react-dnd-html5-backend';\r\nimport { IKanban } from '../../models/Kanban';\r\nimport List from '../List/List';\r\nimport './Kanban.css';\r\n\r\nconst Kanban = (props: KanbanProps) => {\r\n\r\n  return (\r\n    <div className=\"Kanban\">\r\n      <h1>{props.data.name}</h1>\r\n      <div className=\"columns\">\r\n        <DndProvider backend={HTML5Backend}>\r\n          {props.data.lists\r\n            && props.data.lists.map((list, i) => (\r\n              <div className=\"column col-3\" key={`list${i}`}>\r\n                <List cards={list} onMoveHandler={props.onMoveHandler} />\r\n              </div>)\r\n            )}\r\n        </DndProvider>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\ninterface KanbanProps {\r\n  data: IKanban;\r\n  onMoveHandler: any;\r\n}\r\n\r\nexport default Kanban;\r\n","import { useEffect, useState } from 'react';\r\nimport { getUserBoard } from './api/fakeBackend';\r\nimport './App.css';\r\nimport Kanban from './components/Kanban/Kanban';\r\nimport { IKanban } from './models/Kanban';\r\n\r\nconst App = () => {\r\n  const [kanban, setKanban] = useState({ name: '', lists: [] } as IKanban);\r\n\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onMoveHandler = (item: any, id: number) => {\r\n    let newKanban = kanban;\r\n    for (let i = 0; i < newKanban.lists.length; i++) {\r\n      const cards = kanban.lists[i];\r\n      for (let k = 0; k < cards.list.length; k++) {\r\n        const card = cards.list[k];\r\n        if (card.id === item.card.id) {\r\n          cards.list.splice(k, 1);\r\n          console.log(`remove '${card.title}' from ${cards.name}`);\r\n        }\r\n      }\r\n\r\n      if (cards.id === id) {\r\n        cards.list.push(item.card);\r\n        console.log(`add '${item.card.title}' in ${cards.name}`);\r\n      }\r\n    }\r\n    setKanban({ name: kanban.name, lists: kanban.lists });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(kanban.lists).length !== 0) {\r\n      localStorage.setItem('kanban', JSON.stringify(kanban));\r\n    }\r\n  }, [kanban])\r\n\r\n\r\n  useEffect(() => {\r\n    const localKanban = localStorage.getItem('kanban');\r\n    if (localKanban) {\r\n      setKanban(JSON.parse(localKanban));\r\n    } else {\r\n      getUserBoard()\r\n        .then((result: any) => {\r\n          setKanban(result);\r\n        }).catch((err: string) => {\r\n          setError(err);\r\n        }).finally(() => {\r\n          // end loading\r\n        });\r\n    }\r\n  }, [])\r\n\r\n  return (<div className=\"App\">\r\n    {error !== \"\" && (<h5>{error}</h5>)}\r\n    {error === \"\" && (<Kanban onMoveHandler={onMoveHandler} data={kanban} />)}\r\n  </div>);\r\n}\r\n\r\nexport default App;\r\n","import data from \"../data/fakedb.json\";\r\n\r\nconst getUserBoard = (userId?: string) => {\r\n  return new Promise((resolve, reject) => {\r\n    if (data) resolve(data[0]);\r\n    reject(\"Data not found\");\r\n  });\r\n};\r\n\r\nexport { getUserBoard };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}