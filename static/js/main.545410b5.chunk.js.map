{"version":3,"sources":["Constants.ts","components/Badge/Badge.tsx","components/Form/Form.tsx","components/Card/Card.tsx","components/List/List.tsx","components/Kanban/Kanban.tsx","App.tsx","api/fakeBackend.ts","index.tsx"],"names":["ItemTypes","Badge","props","className","text","Form","useState","title","setTitle","type","name","value","onChange","e","target","onTitleChange","Card","card","item","showEditForm","setShowEditForm","useDrag","collect","monitor","opacity","isDragging","dragRef","toggleEdit","status","stopPropagation","ref","style","onClick","id","newTitle","List","useDrop","accept","drop","onMoveHandler","cards","list","map","i","Kanban","data","DndProvider","backend","HTML5Backend","lists","App","kanban","setKanban","error","setError","useEffect","Object","keys","length","localStorage","setItem","JSON","stringify","localKanban","getItem","parse","Promise","resolve","reject","then","result","catch","err","finally","newKanban","filter","x","push","k","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.545410b5.chunk.js","sourcesContent":["export const ItemTypes = {\n  CARD: \"CARD\",\n};\n","import React from 'react';\nimport './Badge.css';\n\nconst Badge = (props: BadgeProps) => (\n  <div className=\"label label-rounded h6 label-primary Badge\">\n    {props.text}\n  </div>\n);\n\ninterface BadgeProps {\n  text: string;\n  color?: string;\n}\n\nexport default Badge;\n","import React, { useState } from 'react';\nimport './Form.css';\n\nconst Form = (props: FormProps) => {\n  const [title, setTitle] = useState(props.title);\n\n  const onTitleChange = (e: any) => {\n    setTitle(e.target.value)\n    props.onTitleChange(title);\n  }\n\n  return (<div>\n    <input type=\"text\" name=\"title\" className=\"form-input\" value={title} onChange={onTitleChange} />\n  </div>);\n}\n\ninterface FormProps {\n  title: string;\n  onTitleChange: any;\n}\n\nexport default Form;\n","import { useState } from 'react';\nimport { useDrag } from 'react-dnd'\nimport { ItemTypes } from '../../Constants';\nimport { ICard } from '../../models/Card';\nimport Badge from '../Badge/Badge';\nimport Form from '../Form/Form';\nimport './Card.css';\n\nconst Card = (props: CardProps) => {\n  const card = props.item;\n  const [showEditForm, setShowEditForm] = useState(false);\n\n  const [{ opacity }, dragRef] = useDrag(() => ({\n    type: ItemTypes.CARD,\n    item: { card },\n    collect: (monitor) => ({\n      opacity: monitor.isDragging() ? 0.5 : 1\n    }),\n  }), []);\n\n  const toggleEdit = (e: any, status: boolean) => {\n    e.stopPropagation();\n    setShowEditForm(status);\n  }\n\n  const onTitleChange = (title: string) => {\n    props.onTitleChange({ newTitle: title, id: card.id });\n  }\n\n  return (\n    <div className=\"card mt-2\" ref={dragRef} style={{ opacity }} onClick={(e) => toggleEdit(e, false)}>\n      <div className=\"card-header\">\n        <Badge text={`${props.item.id}`} /> <br />\n\n        {!showEditForm && <h4 onClick={(e) => toggleEdit(e, true)}>{props.item.title}</h4>}\n        {showEditForm && <div onClick={(e) => toggleEdit(e, true)}><Form title={card.title} onTitleChange={onTitleChange} /></div>}\n\n      </div>\n    </div>\n  );\n}\n\ninterface CardProps {\n  item: ICard;\n  onTitleChange: any;\n}\n\nexport default Card;\n","import { useDrop } from 'react-dnd';\nimport { ItemTypes } from '../../Constants';\nimport { IList } from '../../models/List';\nimport Card from '../Card/Card';\nimport './List.css';\n\nconst List = (props: ListProps) => {\n\n  const [, drop] = useDrop(() => ({\n    accept: ItemTypes.CARD,\n    drop: (item, monitor) => {\n      props.onMoveHandler(item, props.cards.id);\n    }\n  }));\n\n  return (\n    <div className=\"card List full-height\" ref={drop}>\n      <div className=\"card-header\">\n        <div className=\"card-title label label-primary\">{props.cards.name}</div>\n      </div>\n      <div className=\"card-body\">\n        <div className=\"columns\">\n          {props.cards.list\n            && props.cards.list.map((card, i) => (\n              <div className=\"col-12\" key={`card${i}`}>\n                <Card \n                  onTitleChange={props.onTitleChange}\n                  item={card} />\n              </div>)\n            )}\n        </div>\n      </div>\n    </div>\n  );\n}\ninterface ListProps {\n  cards: IList;\n  onMoveHandler: any;\n  onTitleChange: any;\n}\n\nexport default List;\n","import { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { IKanban } from '../../models/Kanban';\nimport List from '../List/List';\nimport './Kanban.css';\n\nconst Kanban = (props: KanbanProps) => {\n\n  return (\n    <div className=\"Kanban\">\n      <h1>{props.data.name}</h1>\n      <div className=\"columns\">\n        <DndProvider backend={HTML5Backend}>\n          {props.data.lists\n            && props.data.lists.map((list, i) => (\n              <div className=\"column col-3\" key={`list${i}`}>\n                <List cards={list} onMoveHandler={props.onMoveHandler} onTitleChange={props.onTitleChange} />\n              </div>)\n            )}\n        </DndProvider>\n      </div>\n    </div>\n  );\n}\ninterface KanbanProps {\n  data: IKanban;\n  onMoveHandler: any;\n  onTitleChange: any;\n\n}\n\nexport default Kanban;\n","import { useEffect, useState } from 'react';\nimport { getUserBoard } from './api/fakeBackend';\nimport './App.css';\nimport Kanban from './components/Kanban/Kanban';\nimport { IKanban } from './models/Kanban';\n\nconst App = () => {\n  const [kanban, setKanban] = useState({ name: '', lists: [] } as IKanban);\n\n  const [error, setError] = useState(\"\");\n\n  const onMoveHandler = (item: any, id: number) => {\n    let newKanban = kanban;\n\n    for (let i = 0; i < newKanban.lists.length; i++) {\n      const cards = kanban.lists[i].list.filter(x => x.id !== item.card.id);\n      newKanban.lists[i].list = cards;\n      if (newKanban.lists[i].id === id) {\n        newKanban.lists[i].list.push(item.card);\n      }\n    }\n    \n    setKanban({ name: kanban.name, lists: kanban.lists });\n  }\n\n  useEffect(() => {\n    if (Object.keys(kanban.lists).length !== 0) {\n      localStorage.setItem('kanban', JSON.stringify(kanban));\n    }\n  }, [kanban])\n\n\n  useEffect(() => {\n    const localKanban = localStorage.getItem('kanban');\n    if (localKanban) {\n      setKanban(JSON.parse(localKanban));\n    } else {\n      getUserBoard()\n        .then((result: any) => {\n          setKanban(result);\n        }).catch((err: string) => {\n          setError(err);\n        }).finally(() => {\n          // end loading\n        });\n    }\n  }, [])\n\n  const onTitleChange = (item: any) => {\n    let newKanban = kanban;\n\n    for (let i = 0; i < newKanban.lists.length; i++) {\n      const cards = kanban.lists[i];\n      for (let k = 0; k < cards.list.length; k++) {\n        const card = cards.list[k];\n        if (card.id === item.id) {\n          card.title = item.newTitle;\n        }\n      }\n    }\n\n    setKanban({ name: kanban.name, lists: kanban.lists });\n  }\n\n  return (<div className=\"App\">\n    {error !== \"\" && (<h5>{error}</h5>)}\n    {error === \"\" && (<Kanban onMoveHandler={onMoveHandler} data={kanban} onTitleChange={onTitleChange} />)}\n  </div>);\n}\n\nexport default App;\n","import data from \"../data/fakedb.json\";\n\nconst getUserBoard = (userId?: string) => {\n  return new Promise((resolve, reject) => {\n    if (data) resolve(data[0]);\n    reject(\"Data not found\");\n  });\n};\n\nexport { getUserBoard };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}